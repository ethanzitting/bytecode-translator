// BasicLoop.asm
    // Initialize SP to 256
    @256                       // 0
    D=A                        // 1
    @SP                        // 2
    M=D                        // 3
    // Initialize ARG to 400
    @400                       // 4
    D=A                        // 5
    @ARG                       // 6
    M=D                        // 7
    // Initialize THIS to 3000
    @3000                      // 8
    D=A                        // 9
    @THIS                      // 10
    M=D                        // 11
    // Initialize THAT to 3010
    @3010                      // 12
    D=A                        // 13
    @THAT                      // 14
    M=D                        // 15
    // Initialize TEMP to 5
    @5                         // 16
    D=A                        // 17
    @TEMP                      // 18
    M=D                        // 19


    // push constant 0
    @0                         // 20
    D=A                        // 21
    @SP                        // 22
    A=M                        // 23
    M=D                        // 24
    @SP                        // 25
    M=M+1                      // 26


    // pop local 0
    @LCL                       // 27
    D=M                        // 28
    @0                         // 29
    D=D+A                      // 30
    @addr                      // 31
    M=D                        // 32
    @SP                        // 33
    M=M-1                      // 34
    A=M                        // 35
    D=M                        // 36
    @addr                      // 37
    A=M                        // 38
    M=D                        // 39


    // label LOOP_START
(LOOP_START)


    // push argument 0
    @0                         // 40
    D=A                        // 41
    @ARG                       // 42
    D=D+M                      // 43
    @addr                      // 44
    M=D                        // 45
    @addr                      // 46
    A=M                        // 47
    D=M                        // 48
    @SP                        // 49
    A=M                        // 50
    M=D                        // 51
    @SP                        // 52
    M=M+1                      // 53


    // push local 0
    @0                         // 54
    D=A                        // 55
    @LCL                       // 56
    D=D+M                      // 57
    @addr                      // 58
    M=D                        // 59
    @addr                      // 60
    A=M                        // 61
    D=M                        // 62
    @SP                        // 63
    A=M                        // 64
    M=D                        // 65
    @SP                        // 66
    M=M+1                      // 67


    // add
    @SP                        // 68
    M=M-1                      // 69
    A=M                        // 70
    D=M                        // 71
    @SP                        // 72
    M=M-1                      // 73
    A=M                        // 74
    M=D+M                      // 75
    @SP                        // 76
    M=M+1                      // 77


    // pop local 0
    @LCL                       // 78
    D=M                        // 79
    @0                         // 80
    D=D+A                      // 81
    @addr                      // 82
    M=D                        // 83
    @SP                        // 84
    M=M-1                      // 85
    A=M                        // 86
    D=M                        // 87
    @addr                      // 88
    A=M                        // 89
    M=D                        // 90


    // push argument 0
    @0                         // 91
    D=A                        // 92
    @ARG                       // 93
    D=D+M                      // 94
    @addr                      // 95
    M=D                        // 96
    @addr                      // 97
    A=M                        // 98
    D=M                        // 99
    @SP                        // 100
    A=M                        // 101
    M=D                        // 102
    @SP                        // 103
    M=M+1                      // 104


    // push constant 1
    @1                         // 105
    D=A                        // 106
    @SP                        // 107
    A=M                        // 108
    M=D                        // 109
    @SP                        // 110
    M=M+1                      // 111


    // sub
    @SP                        // 112
    M=M-1                      // 113
    A=M                        // 114
    D=M                        // 115
    @SP                        // 116
    M=M-1                      // 117
    A=M                        // 118
    M=M-D                      // 119
    @SP                        // 120
    M=M+1                      // 121


    // pop argument 0
    @ARG                       // 122
    D=M                        // 123
    @0                         // 124
    D=D+A                      // 125
    @addr                      // 126
    M=D                        // 127
    @SP                        // 128
    M=M-1                      // 129
    A=M                        // 130
    D=M                        // 131
    @addr                      // 132
    A=M                        // 133
    M=D                        // 134


    // push argument 0
    @0                         // 135
    D=A                        // 136
    @ARG                       // 137
    D=D+M                      // 138
    @addr                      // 139
    M=D                        // 140
    @addr                      // 141
    A=M                        // 142
    D=M                        // 143
    @SP                        // 144
    A=M                        // 145
    M=D                        // 146
    @SP                        // 147
    M=M+1                      // 148


    // if-goto LOOP_START
    @SP                        // 149
    @SP                        // 150
    M=M-1                      // 151
    A=M                        // 152
    D=M                        // 153
    @LOOP_START                // 154
    D;JNE                      // 155


    // push local 0
    @0                         // 156
    D=A                        // 157
    @LCL                       // 158
    D=D+M                      // 159
    @addr                      // 160
    M=D                        // 161
    @addr                      // 162
    A=M                        // 163
    D=M                        // 164
    @SP                        // 165
    A=M                        // 166
    M=D                        // 167
    @SP                        // 168
    M=M+1                      // 169
